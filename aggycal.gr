aggycal

Start

strt

Syntactic

Strt : strt ->  ows event ows .

EventCons : event -> words '\n' daterange ws timerange ows other ows '\n' ows '\n' ows event .
EventFinal : event -> words '\n' daterange ws timerange ows other .

AmericanDate : date -> month datesep day datesep year .
GlobalDate : date -> year datesep month datesep day .

DateRange : daterange -> date ows sep ows date .
SingleDateRange : daterange -> date .

PM : whichm -> pm .
AM : whichm -> am .

RegTime : time -> hour ':' minute ows whichm .
MilitaryTime : time -> hour ':' minute .

TimeRange : timerange -> time ows sep ows time .
AllDayRange : timerange -> allday .

Weekly : frequency -> weekly .
Monthly : frequency -> monthly .
Yearly : frequency -> yearly .

OtherNil : other -> .
Description : other -> 'Description:' ows words ows '\n' other .
Recurrence : other -> 'Repeat:' ows frequency space 'until' space date ows '\n' other .

Lexical

aws => ('\n' | '\t' | space ).
ws => aws+ .
ows => aws* .

symbol -> (space | '!' | '?' | '.' | ',' | '$' | '+' | '-' | '(' | ')' | '#' | '@' | ';' | '_' | '%' | '"' | quote | '‘' | '’' | '“' | '”') .
words -> (['a' - 'z' 'A' - 'Z' '0' - '9'] | symbol )+ .

digit -> ['0' - '9'] .
twodigit -> digit digit .
month -> twodigit .
day -> twodigit .
year -> digit digit digit digit .
datesep => ('/' | '.' | ',' | space) .

hour -> twodigit .
minute -> twodigit .
am => ('AM' | 'am') .
pm => ('PM' | 'pm') .
sep => ('to' | '-' ) .
alldayA => ('all' | 'All' | 'ALL') .
alldayD => ('day' | 'Day' | 'DAY') .
allday => alldayA ows alldayD .

weekly => ('weekly' | 'Weekly' | 'every' space 'week' | 'Every' space 'week') .
monthly => ('monthly' | 'Monthly' | 'every' space 'month' | 'Every' space 'month') .
yearly => ('yearly' | 'Yearly' | 'every' space 'year' | 'Every' space 'year') .
